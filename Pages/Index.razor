@page "/"
@using System.Text

<h1>Startrek</h1>

<table style="font-weight: bold;">
    <tr>
        <td>
            quadrant @_quadrant.Title
        </td>
        <td>

        </td>
    </tr>
    <tr>
        <td>
            @((MarkupString)_quadrant.ToString())
        </td>
        <td style="vertical-align: top;">
            <table width="200" style="margin-left: 50px;">
                <tr>
                    <td>
                        condition
                    </td>
                    <td style="text-align: right;">
                        @_condition
                    </td>
                </tr>
                <tr>
                    <td>
                        torpedoes
                    </td>
                    <td style="text-align: right;">
                        @_torpedoes
                    </td>
                </tr>
                <tr>
                    <td>
                        energy
                    </td>
                    <td style="text-align: right;">
                        @($"{_energy:0000}")
                    </td>
                </tr>
                <tr>
                    <td>
                        shields
                    </td>
                    <td style="text-align: right;">
                        @($"{_shieldLevel:0000}")
                    </td>
                </tr>
                <tr>
                    <td>
                        klingons
                    </td>
                    <td style="text-align: right;">
                        @_klingons
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>

@code {
    private string _condition = "GREEN";
    private int _torpedoes = 10;
    private int _energy = 1815;
    private int _shieldLevel = 1000;
    private int _klingons = 17;

    private Quadrant _quadrant;

    protected override Task OnInitializedAsync()
    {
        _quadrant = new Quadrant("3/1");

        for (int i = 0; i < 8; i++)
        {
            for (int j = 0; j < 7; j++)
            {
                _quadrant.Cells[i, j] = new Empty();
            }
        }

        _quadrant.Cells[7, 2] = new Enterprise();
        _quadrant.Cells[5, 0] = new Star();
        _quadrant.Cells[7, 4] = new Star();
        _quadrant.Cells[4, 5] = new Star();
        _quadrant.Cells[5, 6] = new Star();

        return base.OnInitializedAsync();
    }

    public class Empty
    {
        public override string ToString()
        {
            return "&nbsp;.&nbsp;";
        }
    }

    public class Star : Empty
    {
        public override string ToString()
        {
            return "&nbsp;*&nbsp;";
        }
    }

    public class Enterprise : Empty
    {
        public override string ToString()
        {
            return "-E-";
        }
    }

    public class Quadrant
    {
        public string Title { get; set; }
        public Empty[,] Cells = new Empty[8, 7];

        public Quadrant(string title)
        {
            Title = title;
        }

        public override string ToString()
        {
            var sb = new StringBuilder();
            for (int i = 0; i < 8; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    sb.Append(Cells[i, j]);
                }
                sb.AppendLine("<br />");
            }

            return sb.ToString();
        }
    }
}